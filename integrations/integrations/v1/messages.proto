syntax = "proto3";

package integrations.integrations.v1;

import "google/api/annotations.proto";
import "google/api/field_behavior.proto";
import "google/protobuf/wrappers.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";
import "validate/validate.proto";

import "integrations/entities/v1/integration.proto";
import "integrations/entities/v1/result.proto";
import "integrations/entities/v1/owner.proto";

// Defines the import path that should be used to import the generated package,
// and the package name.
option go_package = "github.com/idbi/goproto/integrations/integrations/v1;v1";
option php_namespace = "IDBI\\PHPProto\\Integrations\\Integrations\\v1";
option php_metadata_namespace = "IDBI\\PHPProto\\Integrations\\Integrations\\v1\\Metadata";


message GetIntegrationsRequest {
  string owner_id = 1 [(validate.rules).string = {uuid:true}];
}

message GetIntegrationsResponse {
  entities.v1.Result result = 1;
  repeated entities.v1.Integration integrations = 2;
}

message RegisterIntegrationRequest {
  string owner_id = 1 [(validate.rules).string = {uuid:true}];
  string type_id = 2 [(validate.rules).string = {uuid:true}];
}

message RegisterIntegrationResponse {
  entities.v1.Result result = 1;
  entities.v1.Integration integration = 2;
}

message RegisterIntegrationPropertiesRequest
{
  string integration_id = 1 [(validate.rules).string = {uuid:true}];
  repeated entities.v1.IntegrationProperty properties = 2;
}

message RegisterIntegrationPropertiesResponse
{
  entities.v1.Result result = 1;
}

message GetIntegrationPropertiesRequest
{
  string integration_id = 1 [(validate.rules).string = {uuid:true}];
}

message GetIntegrationPropertiesResponse
{
  entities.v1.Result result = 1;
  repeated entities.v1.IntegrationProperty properties = 2;
}

message UpdateIntegrationPropertyRequest
{
  string integration_id = 1 [(validate.rules).string = {uuid:true}];
  entities.v1.IntegrationProperty property = 2;
}

message UpdateIntegrationPropertyResponse
{
  entities.v1.Result result = 1;
}

message RemoveIntegrationPropertyRequest
{
  string integration_id = 1 [(validate.rules).string = {uuid:true}];
  repeated string property_ids = 2 [(validate.rules).repeated = {min_items: 1, max_items: 100, unique: true, items: {string: {uuid: true}}}];
}

message RemoveIntegrationPropertyResponse
{
  entities.v1.Result result = 1;
}