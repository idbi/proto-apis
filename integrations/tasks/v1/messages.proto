syntax = "proto3";

package integrations.tasks.v1;

import "google/api/annotations.proto";
import "google/api/field_behavior.proto";
import "google/protobuf/wrappers.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";
import "validate/validate.proto";

import "integrations/entities/v1/owner.proto";
import "integrations/entities/v1/result.proto";
import "integrations/entities/v1/artifact.proto";
import "integrations/entities/v1/task.proto";
import "integrations/entities/v1/status.proto";
import "integrations/entities/v1/integration.proto";

// Defines the import path that should be used to import the generated package,
// and the package name.
option go_package = "github.com/idbi/goproto/integrations/tasks/v1;v1";
option php_namespace = "IDBI\\PHPProto\\Integrations\\Tasks\\v1";
option php_metadata_namespace = "IDBI\\PHPProto\\Integrations\\Tasks\\v1\\Metadata";

message CreateTaskRequest {
  string integration_id = 1 [(validate.rules).string = {uuid: true, ignore_empty: true}];
  repeated entities.v1.TaskProperty properties = 2;
}

message CreateTaskResponse {
  entities.v1.Result result = 1;
  entities.v1.Task task = 2;
}

message GetTasksRequest {
  string integration_id = 1 [(validate.rules).string = {uuid: true, ignore_empty: true}];
  int32 page_size = 2 [(validate.rules).int32 = {gte: 15, lte: 100}];
  string page_token = 3 [(validate.rules).string = {min_len: 1, max_len: 255, ignore_empty: true}];
}

message GetTasksResponse {
  entities.v1.Result result = 1;
  repeated entities.v1.Task tasks = 2;
  string next_page_token = 3 [(validate.rules).string = {min_len: 1, max_len: 255, ignore_empty: true}];
}

message GetTaskRequest {
  string id = 1 [(validate.rules).string = {uuid: true, ignore_empty: true}];
}

message GetTaskResponse {
  entities.v1.Result result = 1;
  entities.v1.Task task = 2;
  repeated entities.v1.TaskProperty properties = 3;
}

message GetTaskStatusRequest {
  string id = 1 [(validate.rules).string = {uuid: true, ignore_empty: true}];
}

message GetTaskStatusResponse {
  entities.v1.Result result = 1;
  entities.v1.Task task = 2;
  repeated entities.v1.Status statuses = 3;
}

message GetTaskResultRequest {
  string id = 1 [(validate.rules).string = {uuid: true, ignore_empty: true}];
}

message GetTaskResultResponse {
  entities.v1.Result result = 1;
  entities.v1.Task task = 2;
  repeated entities.v1.Artifact artifacts = 3;
}